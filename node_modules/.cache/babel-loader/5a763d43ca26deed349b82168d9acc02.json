{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web\\\\ReactJS\\\\counter\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [count, setCount] = useState(0);\n\n  const countColor = () => {\n    if (countColor == 0) {\n      return 'reset';\n    } else if (countColor > 0) {\n      return 'positive';\n    } else {\n      return 'negative';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"countColor(count\",\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"positive-btn\",\n        onClick: () => {\n          setCount(count + 1);\n        },\n        children: \"Increase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset-btn\",\n        onClick: () => {\n          setCount(0);\n        },\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"negative-btn\",\n        onClick: () => {\n          setCount(count - 1);\n        },\n        children: \"Decrease\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = App;\n\nconst app = /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 14\n}, this);\n\nReactDOM.render(app, document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Web/ReactJS/counter/src/index.js"],"names":["React","useState","ReactDOM","App","count","setCount","countColor","app","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMK,UAAU,GAAG,MAAM;AACrB,QAAGA,UAAU,IAAI,CAAjB,EAAoB;AAChB,aAAO,OAAP;AACH,KAFD,MAEO,IAAGA,UAAU,GAAG,CAAhB,EAAmB;AACtB,aAAO,UAAP;AACH,KAFM,MAEA;AACH,aAAO,UAAP;AACH;AACJ,GARD;;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA,gBAAkCF;AAAlC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,OAAO,EAAE,MAAM;AAACC,UAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AAAoB,SAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAE,MAAM;AAACC,UAAAA,QAAQ,CAAC,CAAD,CAAR;AAAY,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,OAAO,EAAE,MAAM;AAACA,UAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AAAoB,SAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAvBQD,G;;KAAAA,G;;AAwBT,MAAMI,GAAG,gBAAI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAb;;AACAL,QAAQ,CAACM,MAAT,CAAgBD,GAAhB,EAAqBE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAArB","sourcesContent":["import React ,{useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style.css';\r\n\r\n\r\n\r\nfunction App() {\r\n    const [count, setCount] = useState(0);\r\n\r\n    const countColor = () => {\r\n        if(countColor == 0) {\r\n            return 'reset';\r\n        } else if(countColor > 0) {\r\n            return 'positive';\r\n        } else {\r\n            return 'negative';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='App'>\r\n            <h1 className='countColor(count'>{count}</h1>\r\n            <div>\r\n                <button className='positive-btn' onClick={() => {setCount(count + 1)}}>Increase</button>\r\n                <button className='reset-btn' onClick={() => {setCount(0)}}>Reset</button>\r\n                <button className='negative-btn' onClick={() => {setCount(count - 1)}}>Decrease</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst app = (<App />)\r\nReactDOM.render(app, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}